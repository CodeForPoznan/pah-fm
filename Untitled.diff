diff --git a/backend/fleet_management/admin.py b/backend/fleet_management/admin.py
index 2f7cdeb..e5b0585 100644
--- a/backend/fleet_management/admin.py
+++ b/backend/fleet_management/admin.py
@@ -1,10 +1,12 @@
 from django.contrib import admin
 from django.contrib.auth.admin import UserAdmin
 from django.utils.translation import gettext_lazy as _
+
 from import_export.admin import ImportExportModelAdmin
 from import_export.fields import Field
 from import_export import resources
-from .models import Car, Drive, User, Project
+
+from fleet_management.models import Car, Drive, User, Project
 
 
 class CountryFilter(admin.SimpleListFilter):
@@ -12,19 +14,28 @@ class CountryFilter(admin.SimpleListFilter):
     parameter_name = 'country'
 
     def lookups(self, request, model_admin):
-        return set([
-            (obj.country, obj.country.name) for obj in model_admin.model.objects.exclude(
-                country__isnull=True
-            ).exclude(country__exact='')
-        ])
+        objects = model_admin.model.objects.distinct(self.parameter_name)
+        countries = [(o.country.code, o.country.name) for o in objects]
+        countries = sorted(countries, key=lambda c: c[1])  # sort by name, A-Z
+        return [('ALL', _('Global'))] + countries
 
     def queryset(self, request, queryset):
-        if self.value():
-            return queryset.filter(country=self.value())
+        key = self.parameter_name
+        q = self.value()
+
+        if q == "ALL":
+            key = f"{key}__exact"
+            return queryset.filter(**{key: ''})
+        elif q:
+            return queryset.filter(**{key: q})
         else:
             return queryset
 
 
+class DriveCountryFilter(CountryFilter):
+    parameter_name = 'driver__country'
+
+
 class DriveResource(resources.ModelResource):
 
     def dehydrate_driver(self, drive):
@@ -46,6 +57,7 @@ class DriveResource(resources.ModelResource):
             "id",
             "date",
             "country",
+            "is_verified",
             "project__title",
             "description",
             "start_mileage",
@@ -63,6 +75,10 @@ class DriveResource(resources.ModelResource):
 
 
 class DriveAdmin(ImportExportModelAdmin):
+
+    def country(self, drive):
+        return str(drive.driver.country.name)
+
     resource_class = DriveResource
     list_filter = ("driver__country",)
     list_display = ("__str__", "country", "is_verified")
@@ -99,7 +115,8 @@ class CustomUserAdmin(UserAdmin):
         ),
         (_("Important dates"), {"fields": ("last_login", "date_joined")}),
     )
-    list_filter = ('is_staff', 'is_superuser', 'is_active', 'groups', CountryFilter,)
+    list_filter = ('is_staff', 'is_superuser', 'is_active', 'groups', CountryFilter)
+    list_display = ('username', 'first_name', 'last_name', 'country', 'is_staff')
 
 
 admin.site.register(Car, CarAdmin)
diff --git a/backend/fleet_management/migrations/0023_country_fields_blank_set_to_true.py b/backend/fleet_management/migrations/0023_country_fields_blank_set_to_true.py
new file mode 100644
index 0000000..952abe4
--- /dev/null
+++ b/backend/fleet_management/migrations/0023_country_fields_blank_set_to_true.py
@@ -0,0 +1,24 @@
+# Generated by Django 2.2.10 on 2020-03-12 15:26
+
+from django.db import migrations
+import django_countries.fields
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('fleet_management', '0022_auto_20191221_2303'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='project',
+            name='country',
+            field=django_countries.fields.CountryField(blank=True, max_length=2),
+        ),
+        migrations.AlterField(
+            model_name='user',
+            name='country',
+            field=django_countries.fields.CountryField(blank=True, max_length=2),
+        ),
+    ]
diff --git a/backend/fleet_management/models.py b/backend/fleet_management/models.py
index d275aa0..e7fd9a2 100644
--- a/backend/fleet_management/models.py
+++ b/backend/fleet_management/models.py
@@ -12,7 +12,7 @@ def get_current_timestamp_in_gmt():
 
 
 class User(AbstractUser):
-    country = CountryField(blank_label="(select country)", null=False)
+    country = CountryField(blank_label="(select country)", null=False, blank=True)
     rsa_modulus_n = models.CharField(max_length=6, null=False, default="")
     rsa_pub_e = models.CharField(max_length=6, null=False, default="")
     rsa_priv_d = models.CharField(max_length=6, null=False, default="")
@@ -43,7 +43,7 @@ class Car(models.Model):
     plates = models.CharField(max_length=10, blank=False, unique=True)
     description = models.CharField(max_length=500, blank=True)
     fuel_consumption = models.FloatField(null=False, default=0)
-    country = CountryField(blank_label="(select country)", null=False)
+    country = CountryField(blank_label="(select country)", null=False, blank=False)
 
     def __str__(self):
         return self.plates
@@ -52,7 +52,7 @@ class Car(models.Model):
 class Project(models.Model):
     title = models.CharField(max_length=50, blank=False)
     description = models.CharField(max_length=1000, blank=False)
-    country = CountryField(blank_label="(select country)", default=None)
+    country = CountryField(blank_label="(select country)", null=False, blank=True)
 
     def __str__(self):
         return self.title
@@ -96,7 +96,7 @@ class Drive(models.Model):
 
     @property
     def country(self):
-        return self.driver.country.name
+        return self.driver.country
 
     @property
     def fuel_consumption(self):
